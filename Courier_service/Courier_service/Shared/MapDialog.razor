@using BlazorLeaflet
@using BlazorLeaflet.Models
@using Courier_service.Services.LocationService
@using Courier_service.Models

<MudDialog>
	<DialogContent>
		<div style="width: 100%; height: 400px;">
			<LeafletMap Map="@mapController.Map" />
		</div>
	</DialogContent>
	<DialogActions>
		<MudButton OnClick="Cancel">Close</MudButton>
	</DialogActions>
</MudDialog>

@code{ 
	[CascadingParameter] MudDialogInstance MudDialog { get; set; }
	[Parameter] public MapController mapController { get; set; }
	[Parameter] public Route route { get; set; }

	protected async override Task OnInitializedAsync()
	{
		await Task.Delay(100);
		ShowRoute();
	}

	void ShowRoute()
	{
		LatLng sc = LocationDistance.ParseLatLng(route.StartCoordinates);
		LatLng fc = LocationDistance.ParseLatLng(route.FinishCoordinates);
		if (sc != null && fc != null)
		{
			mapController.AddMarker(new Marker(sc) { Popup = new Popup() { Content = route.StartName } });
			mapController.AddMarker(new Marker(fc) { Popup = new Popup() { Content = route.FinishName } });
			mapController.AddPathAndBound($"[{route.StartCoordinates},{route.FinishCoordinates}]",
				$"Distance: {LocationDistance.DistanceBetweenPlaces(sc, fc).ToString("N0") + " m"}");

		}
	}

	void Cancel() => MudDialog.Cancel();
}
